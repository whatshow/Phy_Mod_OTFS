<deployment-project plugin="plugin.toolbox" plugin-version="1.0">
  <configuration file="D:\Projects\Github_Whatshow\Phy_Mod_OTFS\build.prj" location="D:\Projects\Github_Whatshow\Phy_Mod_OTFS" name="build" target="target.toolbox" target-name="Package Toolbox">
    <param.appname>whatshow_phy_mod_otfs</param.appname>
    <param.authnamewatermark>whatshow</param.authnamewatermark>
    <param.email>wfwfpwefe2323@gmail.com</param.email>
    <param.company />
    <param.summary>This repository is a fundamental toolbox of OTFS modulation.</param.summary>
    <param.description>This section will illustrate the methods of this class following the process from Tx to Rx.
1. OTFS
@nSubcarNum: the subcarrier number
@nTimeslotNum: the timeslot number
@batch_size(optional) : the batch size (only used in python).
nSubcarNum = 16;
nTimeslotNum = 7;
otfs = OTFS(nSubcarNum, nTimeslotNum);
2. modulate
@symbols: a vector of [(batch_size), nSubcarNum*nTimeslotNum], or a matrix in delay Doppler domain [(batch_size), Doppler, delay] or [(batch_size), nTimeslotNum ,nSubcarNum]
otfs.modulate(x_origin);
3. setChannel (this methods has 2 kinds of inputs)
3.1 generate random channel: If we use batch, the channel will be different for each sample in the batch. 
@p: the path number (scalar)
@lmax: the maximal integer delay index (scalar)
@kmax: the maximal integer Doppler index (scalar). If set to a float number, we use fractional Doppler
otfs.setChannel("p", 6, "lmax", 11, "kmax", 3);
3.2 generate fixed channel
@gains: the channel gains of [(batch_size), p]
@delays: the channel delays of [(batch_size), p]
@dopplers: the channel Doppler shift of [(batch_size), p]
otfs.setChannel("delays", [0, 1], "Dopplers", [2, 3], "gains", [0.5, 0.5]);
4. getChannel: return the Delay-Doppler domain channel matrix of [(batch_size), nSubcarNumnTimeslotNum, nSubcarNumnTimeslotNum]
H_DD = otfs.getChannel();
5. passChannel
@No: a scalar of the linear noise power# matlab &amp; python
otfs.passChannel(No);
6. demodulate
return value: the vectorized received signal in the delay Doppler domain, a vector of [(batch_size), nSubcarNum*nTimeslotNum]
yDD = otfs.demodulate();</param.description>
    <param.screenshot />
    <param.version>2.0.1</param.version>
    <param.output>${PROJECT_ROOT}\whatshow_phy_mod_otfs.mltbx</param.output>
    <param.products.name />
    <param.products.id />
    <param.products.version />
    <param.platforms />
    <param.guid>a8847e31-4b02-44b2-b26c-6c504e60b1da</param.guid>
    <param.exclude.filters>%% folders
.git/
.spyproject/
__pycache__/
_dist/
_tmp/
_data/
Img/
Samples/

%% files
.gitignore
init.m
*.asv

%% files - python
*.py</param.exclude.filters>
    <param.exclude.pcodedmfiles>true</param.exclude.pcodedmfiles>
    <param.examples />
    <param.demosxml />
    <param.apps />
    <param.registered.apps />
    <param.docs />
    <param.getting.started.guide>${PROJECT_ROOT}\doc\GettingStarted.mlx</param.getting.started.guide>
    <param.matlabpath.excludes>
      <item>/Samples</item>
      <item>/Samples/TestDetect</item>
      <item>/Samples/TestFractionalDoppler</item>
      <item>/Samples/TestOTFSAllFunctions</item>
      <item>/Samples/TestWaveForms</item>
      <item>/Samples/Viterbo_MP_2018</item>
    </param.matlabpath.excludes>
    <param.javaclasspath.excludes />
    <param.exported.on.package>false</param.exported.on.package>
    <param.required.addons />
    <param.matlab.project.id />
    <param.matlab.project.name />
    <param.release.start />
    <param.release.end />
    <param.release.current.only>false</param.release.current.only>
    <param.compatiblity.windows>true</param.compatiblity.windows>
    <param.compatiblity.macos>true</param.compatiblity.macos>
    <param.compatiblity.linux>true</param.compatiblity.linux>
    <param.compatiblity.matlabonline>true</param.compatiblity.matlabonline>
    <param.installation.map />
    <param.additional.sw.names />
    <param.additional.sw.licenses />
    <param.additional.sw.win.url />
    <param.additional.sw.mac.url />
    <param.additional.sw.linux.url />
    <unset>
      <param.company />
      <param.screenshot />
      <param.output />
      <param.products.name />
      <param.products.id />
      <param.products.version />
      <param.platforms />
      <param.exclude.pcodedmfiles />
      <param.examples />
      <param.demosxml />
      <param.apps />
      <param.registered.apps />
      <param.docs />
      <param.javaclasspath.excludes />
      <param.exported.on.package />
      <param.required.addons />
      <param.matlab.project.id />
      <param.matlab.project.name />
      <param.release.start />
      <param.release.end />
      <param.release.current.only />
      <param.compatiblity.windows />
      <param.compatiblity.macos />
      <param.compatiblity.linux />
      <param.compatiblity.matlabonline />
      <param.installation.map />
      <param.additional.sw.names />
      <param.additional.sw.licenses />
      <param.additional.sw.win.url />
      <param.additional.sw.mac.url />
      <param.additional.sw.linux.url />
    </unset>
    <fileset.rootdir>
      <file>${PROJECT_ROOT}</file>
    </fileset.rootdir>
    <fileset.rootfiles>
      <file>${PROJECT_ROOT}\LICENSE</file>
      <file>${PROJECT_ROOT}\OTFS.m</file>
      <file>${PROJECT_ROOT}\OTFSDetector.m</file>
      <file>${PROJECT_ROOT}\OTFSResGrid.m</file>
      <file>${PROJECT_ROOT}\README.md</file>
    </fileset.rootfiles>
    <fileset.depfun.included />
    <fileset.depfun.excluded>
      <file>${MATLAB_ROOT}\toolbox\local\restoredefaultpath.m</file>
      <file>${MATLAB_ROOT}\toolbox\local\userpath.m</file>
    </fileset.depfun.excluded>
    <fileset.package />
    <build-deliverables>
      <file location="${PROJECT_ROOT}" name="whatshow_phy_mod_otfs.mltbx" optional="false">D:\Projects\Github_Whatshow\Phy_Mod_OTFS\whatshow_phy_mod_otfs.mltbx</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>C:\Program Files\MATLAB\R2023a</root>
      <toolboxes>
        <toolbox name="matlabcoder" />
        <toolbox name="embeddedcoder" />
        <toolbox name="gpucoder" />
        <toolbox name="fixedpoint" />
        <toolbox name="matlabhdlcoder" />
        <toolbox name="neuralnetwork" />
      </toolboxes>
      <toolbox>
        <matlabcoder>
          <enabled>true</enabled>
        </matlabcoder>
      </toolbox>
      <toolbox>
        <embeddedcoder>
          <enabled>true</enabled>
        </embeddedcoder>
      </toolbox>
      <toolbox>
        <gpucoder>
          <enabled>true</enabled>
        </gpucoder>
      </toolbox>
      <toolbox>
        <fixedpoint>
          <enabled>true</enabled>
        </fixedpoint>
      </toolbox>
      <toolbox>
        <matlabhdlcoder>
          <enabled>true</enabled>
        </matlabhdlcoder>
      </toolbox>
      <toolbox>
        <neuralnetwork>
          <enabled>true</enabled>
        </neuralnetwork>
      </toolbox>
    </matlab>
    <platform>
      <unix>false</unix>
      <mac>false</mac>
      <windows>true</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>false</linux>
      <solaris>false</solaris>
      <osver>10.0</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>win64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>