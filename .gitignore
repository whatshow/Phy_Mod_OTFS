##########################################################################################################################
# OS Temporary files
##########################################################################################################################
*.swp
__MACOSX
.DS_Store
Thumbs.db
[Uu]ntrack/
##########################################################################################################################




##########################################################################################################################
# Development & Distribution Folders
##########################################################################################################################

# build
[Bb][Uu][Ii][Ll][Dd]/
_[Bb][Uu][Ii][Ll][Dd]/
_[Bb][Uu][Ii][Ll][Dd]_/
__[Bb][Uu][Ii][Ll][Dd]/
__[Bb][Uu][Ii][Ll][Dd]__/
# target
[Tt][Aa][Rr][Gg][Ee][Tt]/
_[Tt][Aa][Rr][Gg][Ee][Tt]/
_[Tt][Aa][Rr][Gg][Ee][Tt]_/
__[Tt][Aa][Rr][Gg][Ee][Tt]/
__[Tt][Aa][Rr][Gg][Ee][Tt]__/
# tmp
[Tt][Mm][Pp]/
_[Tt][Mm][Pp]/
_[Tt][Mm][Pp]_/
__[Tt][Mm][Pp]/
__[Tt][Mm][Pp]__/
# out-tsc
[Oo][Uu][Tt]-[Tt][Ss][Cc]/
# dist
[Dd][Ii][Ss][Tt]/
_[Dd][Ii][Ss][Tt]/
_[Dd][Ii][Ss][Tt]_/
__[Dd][Ii][Ss][Tt]/
__[Dd][Ii][Ss][Tt]__/
# dev
[Dd][Ee][Vv]/*
_[Dd][Ee][Vv]/*
_[Dd][Ee][Vv]_/*
__[Dd][Ee][Vv]/*
__[Dd][Ee][Vv]__/*
![Dd][Ee][Vv]/[Mm][Oo][Dd][Ee][Ll][Ss]/
!_[Dd][Ee][Vv]/[Mm][Oo][Dd][Ee][Ll][Ss]/
!_[Dd][Ee][Vv]_/[Mm][Oo][Dd][Ee][Ll][Ss]/
!__[Dd][Ee][Vv]/[Mm][Oo][Dd][Ee][Ll][Ss]/
!__[Dd][Ee][Vv]__/[Mm][Oo][Dd][Ee][Ll][Ss]/
# results
[Rr][Ee][Ss][Uu][Ll][Tt][Ss]/
_[Rr][Ee][Ss][Uu][Ll][Tt][Ss]/
_[Rr][Ee][Ss][Uu][Ll][Tt][Ss]_/
__[Rr][Ee][Ss][Uu][Ll][Tt][Ss]/
__[Rr][Ee][Ss][Uu][Ll][Tt][Ss]__/
##########################################################################################################################



##########################################################################################################################
# drawio
##########################################################################################################################
*.drawio.bkp
*.drawio.dtmp
##########################################################################################################################




##########################################################################################################################
# Vscode
##########################################################################################################################
.vscode
# Local History for Visual Studio Code
.history/
# Built Visual Studio Code Extensions
*.vsix
##########################################################################################################################




##########################################################################################################################
# Visual Studio
##########################################################################################################################
.vs
x64/
Debug/
Release/
##########################################################################################################################



##########################################################################################################################
# JetBrains
##########################################################################################################################
.idea
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace
# Gradle and Maven with auto-import. When using Gradle or Maven with auto-import, you should exclude module files, since they will be recreated, and may cause churn.  Uncomment if using auto-import.
*.iml
*.ipr
# CMake
cmake-build-*/
# File-based project format
*.iws
# IntelliJ
out/
# mpeltonen/sbt-idea plugin
.idea_modules/
# JIRA plugin
atlassian-ide-plugin.xml
# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties
##########################################################################################################################




##########################################################################################################################
# C/C++
##########################################################################################################################
# Prerequisites
*.d
# Compiled Object files
*.slo
*.lo
*.o
*.ko
*.obj
*.elf
# Linker output
*.ilk
*.map
*.exp
# Precompiled Headers
*.gch
*.pch
# Compiled Dynamic libraries
*.so
*.so.*
*.dylib
*.dll
# Fortran module files
*.mod
*.smod
# Compiled Static libraries
*.lai
*.la
*.lo
*.a
*.lib
# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex
# C/C++ binary extension file
*.bin
# Debug files
*.dSYM/
*.su
*.idb
*.pdb
##########################################################################################################################




##########################################################################################################################
# Matlab
##########################################################################################################################
# Windows default autosave extension
*.[Aa][Ss][Vv]
*.r[0-9][0-9][0-9][0-9][AaBb]
# OSX / *nix default autosave extension
*.m~
# Compiled MEX binaries (all platforms)
*.mex*
# Packaged app and toolbox files
*.mlappinstall
*.mltbx
# Generated helpsearch folders
helpsearch*/
# Simulink code generation folders
slprj/
sccprj/
# Matlab code generation folders
codegen/
# Simulink autosave extension
*.autosave
# Simulink cache files
*.slxc
# Octave session info
octave-workspace
##########################################################################################################################




##########################################################################################################################
# Python
##########################################################################################################################
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Distribution / packaging
.Python
develop-eggs/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
##########################################################################################################################




##########################################################################################################################
# Javascript
##########################################################################################################################
# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# misc
.sass-cache
connect.lock
typings

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Dependency directories
node_modules/
jspm_packages/

# npm
.npm
package-lock.json

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# next.js build output
.next

# Lerna
lerna-debug.log

##########################################################################################################################
# waf
##########################################################################################################################
# For projects that use the Waf build system: https://waf.io/
# Dot-hidden on Unix-like systems
.waf-*/
.waf-*-*/
.waf3-*/
.waf3-*-*/
# Hidden directory on Windows (no dot)
waf-*/
waf-*-*/
waf3-*/
waf3-*-*/
# Lockfile
.lock-waf_*_build
